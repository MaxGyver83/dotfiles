history=$home/.rc_history

stty -ixon

path=($home/install $home/bin $home/.local/bin $path)

EDITOR=nvim

esc=`{printf '\e'}
RED=$esc'[1;31m'
GREEN=$esc'[0;32m'
YELLOW=$esc'[0;33m'
BLUE=$esc'[0;34m'
RESET=$esc'[0m'

fn prompt {
	curstatus=$status
	if (~ $curstatus 0) {
		result=''
	} else
		result=$RED^'['^$curstatus^']'^$RESET^' '
	dir = `` $nl {pwd | sed -E 's|^(/media)?'$home'/||'}

	branch=`{git rev-parse --abbrev-ref HEAD >[2=]}
	if (!~ $branch ()) {
		modified=`{git ls-files --modified | wc -l}
		untracked=`{git ls-files --others --exclude-standard | wc -l}
		remote_tracking=`{git rev-parse --abbrev-ref --symbolic-full-name '@{u}'  >[2=]}
		behind=0
		ahead=0
		if (~ $status 0) {
			behind=`{git rev-list --left-only --count $remote_tracking...@ >[2=]}
			ahead=`{git rev-list --right-only --count $remote_tracking...@ >[2=]}
		}
		if (~ $modified 0) {
			branch=' ('$GREEN^$branch^$RESET
		} else
			branch=' ('^$YELLOW^$branch^$RESET
		if (!~ $behind 0)    branch=$branch^'↓'^$behind
		if (!~ $ahead 0)     branch=$branch^'↑'^$ahead
		if (!~ $modified 0 || !~ $untracked 0)
			branch=$branch^'|'
		if (!~ $modified 0)  branch=$branch^'+'^$modified
		if (!~ $untracked 0) branch=$branch^'…'^$untracked
		branch=$branch^')'
	}

	ps1 = $nl^$result^$BLUE^$dir^$RESET^$branch^$nl^'% '
	ps2 = '  '
	prompt = ($ps1 $ps2)
	~ $curstatus 0 # reset status to original value
}

# support `cd -` and update $PWD
fn cd {
	curdir=$PWD
	switch ($1) {
		case (); builtin cd
		case -;  builtin cd $lastdir
		case *;  builtin cd $*
	}
	PWD=`pwd
	if (!~ $curdir $PWD)
		lastdir=$curdir
}

# edit command in $VIM_CMD and source it afterwards
fn editcmd {
	tmp_file=`{mktemp /tmp/cmd-XXXXXX.rc}
	$VIM_CMD $tmp_file && . $tmp_file
}

fn alias {
	name=$1
	shift
	eval 'fn' $name '{' $* '$*}'
}

. $home/.rc_aliases
. $home/repos/z.rc/z.rc
