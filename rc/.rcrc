history=$home/.rc_history

stty -ixon

path=($home/install $home/bin $home/.local/bin $path)

esc=`{printf '\e'}
RED=$esc'[1;31m'
GREEN=$esc'[0;32m'
YELLOW=$esc'[0;33m'
BLUE=$esc'[0;34m'
RESET=$esc'[0m'

fn prompt {
	curstatus=$status
	if (~ $curstatus 0) {
		result=''
	} else
		result=$RED^'['^$curstatus^']'^$RESET^' '
	dir=`{pwd | sed -E 's|^(/media)?'$home'/||'}

	branch=`{git rev-parse --abbrev-ref HEAD >[2=]}
	if (!~ $branch ()) {
		modified=`{git ls-files --modified | wc -l}
		untracked=`{git ls-files --others --exclude-standard | wc -l}
		remote_tracking=`{git rev-parse --abbrev-ref --symbolic-full-name '@{u}'}
		behind=`{git rev-list --left-only --count $remote_tracking...@ >[2=]}
		ahead=`{git rev-list --right-only --count $remote_tracking...@ >[2=]}
		if (~ $modified 0) {
			branch=' ('$GREEN^$branch^$RESET
		} else
			branch=' ('^$YELLOW^$branch^$RESET
		if (!~ $behind 0)    branch=$branch^'↓'^$behind
		if (!~ $ahead 0)     branch=$branch^'↑'^$ahead
		if (!~ $modified 0 || !~ $untracked 0)
			branch=$branch^'|'
		if (!~ $modified 0)  branch=$branch^'+'^$modified
		if (!~ $untracked 0) branch=$branch^'…'^$untracked
		branch=$branch^')'
	}

	prompt=($nl^$result^$BLUE^$dir^$RESET^$branch^$nl^'% ' '  ')
	~ $curstatus 0 # reset status to original value
}

# support `cd -` and update $PWD
fn cd {
	curdir=$PWD
	switch ($1) {
		case (); builtin cd
		case -;  builtin cd $lastdir
		case *;  builtin cd $*
	}
	PWD=`pwd
	if (!~ $curdir $PWD)
		lastdir=$curdir
}

# edit command in $VIM_CMD and source it afterwards
fn editcmd {
	tmp_file=`mktemp
	$VIM_CMD -c 'set ft=rcshell' $tmp_file && . $tmp_file
}

fn alias {
	name=$1
	shift
	eval 'fn' $name '{' $* '$*}'
}

alias .. 'cd ..'
alias ... 'cd ../..'
alias .... 'cd ../../..'
alias ..... 'cd ../../../..'

alias ll 'ls --color=always -lAhF'
alias la 'ls -A'
alias l 'exa -alF --color-scale all --color-scale-mode fixed'
alias lg 'exa -alF --color-scale all --color-scale-mode fixed --git'
alias fdall 'fd -HIL'
alias du0 'du -h -d0'
alias du1 'du -h -d1'
alias ncdu 'ncdu --color=dark --one-file-system'
alias xo xdg-open
alias nw 'ls -Art | tail -n 1'
# alias extract-latest '. $home/bin/extract-latest'
alias y yank
alias cb 'xclip -sel clip'

alias acs 'apt-cache search'
alias sai 'sudo apt install'
alias sau 'sudo apt update'
alias saU 'sudo apt upgrade'
alias alu 'apt list --upgradable'
alias ali 'apt list --installed'
alias ap 'apt policy'

alias sps 'sudo pacman -S'
alias spss 'pacman -Ss'
alias pss 'pacman -Ss'
alias syu 'sudo pacman -Syu'

alias pl 'patool list'
alias pe 'patool extract'
alias px 'patool extract'
alias pc 'patool create'
alias pd 'patool diff'

alias helix 'COLORTERM=truecolor builtin helix'
alias rr ranger
alias feh 'feh --scale-down --auto-zoom --auto-rotate'
alias aerc 'COLORTERM=truecolor builtin aerc'
alias rich 'python -m rich.markdown -c'

alias v vim
alias n nvim
alias e editcmd

if (whatis nvim >[1=] >[2=]) {
	VIM_CMD=nvim
} else VIM_CMD=vim

fn vg {$VIM_CMD '+G' '+silent %bd|e#' '+norm gU'}

alias cr '$VIM_CMD $home/.rcrc'
alias cv '$VIM_CMD $home/.vimrc'
alias cnv '$VIM_CMD $home/.config/nvim/init.vim'
alias cl '$VIM_CMD $home/.vim/after/ftplugin/lisp.vim'
alias cf '$VIM_CMD $home/.config/fish/config.fish'
alias ca '$VIM_CMD $home/.config/fish/aliases.fish'
alias cfl '$VIM_CMD $home/.config/fish/local.fish'
alias cn '$VIM_CMD $home/.config/nyxt/config.lisp'
alias cs '$VIM_CMD $home/.config/sxhkd/sxhkdrc'
alias cst '$VIM_CMD $home/.config/stumpwm/config'
alias ct '$VIM_CMD $home/.tmux.conf'
alias ce '$VIM_CMD $home/.config/emacs/init.el'
alias ck '$VIM_CMD $home/.config/kmonad/vou-linux-de-rctrl.kbd'
alias td '$VIM_CMD $home/dev/gta_local/max/todo/todo.md'

alias g 'git status --short'
alias G 'git status'
alias gd 'git diff'
alias gdd 'git -c core.pager=delta -c delta.syntax-scheme=zenburn diff'
alias gds 'git -c core.pager=delta -c delta.features=side-by-side -c delta.syntax-scheme=zenburn diff'
alias gdt 'git difftool'
alias gf 'git fetch'
alias gp 'git pull'
alias gpa 'git pull --autostash'
alias gps 'git push'
# git push upstream
alias gpsu 'git push --set-upstream origin `{git rev-parse --abbrev-ref HEAD}'
# git reset hard to origin
alias grho 'git reset --hard origin/`{git rev-parse --abbrev-ref HEAD}'
alias gc 'git clone'
alias gcm 'git co master || git co main'

alias en 'LANG=en_US.UTF-8'
