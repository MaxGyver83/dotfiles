#!/bin/bash

case "$1" in
-h|--help) echo "Usage: $0 [-b|--background]"; exit 0 ;;
-b|--background) code=48 ;;
*) code=38 ;;
esac

use_light_background() {
    # returns 0 for light background
    c=$1
    if (( $c < 16 )); then
        return $(( c % 8 >= 1 ))
    elif (( $c < 232 )); then
        return $(( (c-16) % 36 >= 6 ))
    elif (( $c >= 232 )); then
        return $(( (c-232) >= 8 ))
    fi
}

use_dark_foreground() {
    # returns 0 for dark foreground
    c=$1
    if (( $c < 16 )); then
        return $(( c % 8 < 2 ))
    elif (( $c < 232 )); then
        return $(( (c-16) % 36 < 18 ))
    elif (( $c >= 232 )); then
        return $(( c < 244 ))
    fi
}

print_color() {
    c=$((i+column))
    color_string=$(printf %10s colour$c)
    if [ $code = 48 ]; then
        use_dark_foreground $c && inv='\x1b[30m' || inv=''
    else
        use_light_background $c && inv='\x1b[47m' || inv=''
    fi
    printf "\x1b[${code};5;${c}m${inv}${color_string}\x1b[0m "
}

# 16 base colors
for i in {0..15..8}; do
    for column in {0..7}; do print_color; done
    printf "\n"
done

# 6x6x6 RGB colors
for i in {16..231..6}; do
    for column in {0..5}; do print_color; done
    printf "\n"
done

# 24 shades of gray
for i in {232..255..8}; do
    for column in {0..7}; do print_color; done
    printf "\n"
done
