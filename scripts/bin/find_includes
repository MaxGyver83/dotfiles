#!/bin/sh
usage() {
    echo "Usage:
find_includes [--include-dirs DIR,...] [PATH ...]

Get all non-system header files listed in C/C++ files of the current directory
and search for them in the given directories and list all matches.
"
    exit 0
}

PROJECT_DIRS=""
while [ "$1" ]; do case $1 in
  -h|--help) usage ;;
  -i|-I|--include-dirs) INCLUDE_DIRS="$2"; shift; shift ;;
  *) PROJECT_DIRS="$PROJECT_DIRS $1"; shift ;;
esac; done

cwd="$(realpath .)"
git_root="$(git rev-parse --show-toplevel)"
directory_list="$git_root $(echo "${INCLUDE_DIRS:-$cwd}" | tr , ' ')"
not_found=""

search_file() {
    file="$1"
    # echo "File = $file"
    matches="$(fd --type file --max-results=1 --full-path --case-sensitive "[/^]$file\$" $directory_list)"
    if [ "$matches" ]; then
        # first grep -v, then head -n 1?
        # echo "$matches" | head -n 1 | grep -v "$cwd"
        # echo "$matches" | grep -v "$cwd"
        echo "$matches"
        return 0
    fi
    not_found="${not_found}$file
"
    return 1
}

relative_paths="$(list_includes --raw $PROJECT_DIRS)"

for file in $relative_paths ; do
    search_file "$file"
done

if [ "$not_found" ]; then
    >&2 echo "
No matches for:
$not_found"
fi
