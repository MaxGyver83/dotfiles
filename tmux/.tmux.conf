set -g default-terminal "tmux-256color"
set -sa terminal-overrides ',st-256color:RGB'
set -g focus-events on
set -sg escape-time 20
set -sg history-file ~/.tmux_history
set -g history-limit 100000
set -g mouse on
# "allow-passthrough on" and "set-clipboard on" are needed to make vim-oscyank work again in tmux 3.3
set -g allow-passthrough on
set -s set-clipboard on
set -g status-interval 1
set -g mode-keys vi
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1
set -g main-pane-width 50%
set -g main-pane-height 50%

%if "#{&&:#{==:#{SSH_CLIENT},},#{==:#{SSH_TTY},}}"
  # %hidden LOCAL_SESSION=1  # no SSH
  LOCAL_SESSION=1  # no SSH
%endif

%if "#{!=:#{IN_DOCKER},1}"
  NO_DOCKER=1
%endif

%if "#{&&:#{LOCAL_SESSION},#{NO_DOCKER}}"
  NO_SSH_NO_DOCKER=1
%endif

# if "test ! -f /.do" ON_HOST=1  # not in Docker container

# if 'test -n "$LOCAL_SESSION" && test -n "$ON_HOST"' NO_SSH_NO_DOCKER=1

set -g automatic-rename on
# current folder [replace $USER with ~] : current commmand [replace fish with nothing]
set -g automatic-rename-format '#{s/#{USER}/~/:#{?#{==:#{b:pane_current_path},src},#{s,.*/(.*/.*),\1,:pane_current_path},#{b:pane_current_path}}}:#{s/fish//:pane_current_command}'

# panes
set -g pane-border-style fg=colour008,bg=colour235
set -g pane-active-border-style fg=colour208,bg=colour235
setw -g mode-style fg=black,bg=colour208                   # black on orange
# dark gray background, slightly darker for active pane
# doesn't work for light colorschemes
# toggle transparent background for light colorschemes: Alt-Shift-t
set -g window-style bg=colour235                           # dark gray background
set -g window-active-style bg=colour234
set -g clock-mode-colour colour208

# statusbar
set -g status-position bottom
set -g status-justify left
%if '#{NO_SSH_NO_DOCKER}'
  set -g status-style fg=colour226,bg=colour240          # Yellow1 on Grey27 (fg visible in session name)
  set -g status-right '#[fg=colour253,bg=colour236] %H:%M:%S '
%else
  set -g status-style fg=colour226,bg=colour24           # Yellow1 on DeepSkyBlue4 (fg visible in session name)
  # SSH: show hostname instead of time
  set -g status-right '#[fg=colour208,bg=colour236] #h ' # orange on Grey19
%endif
# PREFIX indicator, COPY mode indicator, session name (only if not "0")
set -g status-left '#{?client_prefix,#[fg=white#,bg=red]<PREFIX>#[default],}#{?pane_in_mode,#[fg=black#,bg=colour208]<COPY>#[default],}#{?session_name,[#S] ,}'
set -g status-left-length 30
set -g status-right-length 30

setw -g window-status-current-style fg=colour208,bg=colour236,bold  # DarkOrange, Grey19
setw -g window-status-current-format ' #I #[fg=colour255]#W#[fg=colour249]#F '  # Grey93, Grey70

setw -g window-status-style fg=colour166,bg=colour238  # DarkOrange3, Grey27
# #I=window_index, #W=window_name, #F=window_flags (print a space for constant tab width when there are no flags)
setw -g window-status-format ' #I #[fg=colour250]#W#[fg=colour244]#{?window_flags,#F, } '  # Grey74, Grey50

# messages
#set -g message-style fg=colour232,bg=colour16
#set -g message-style fg=colour232,bg=colour16,bold

%if '#{LOCAL_SESSION}'
  set -g default-command /usr/bin/fish
%endif

## key bindings

# bind = bind-key
# unbind = unbind-key
# send = send-keys
# (un)bind -n = no prefix needed

# replace regular prefix key (C-b) with C-e (except in SSH sessions)
%if '#{NO_SSH_NO_DOCKER}'
  unbind -n C-b
  unbind -n C-e
  set -g prefix ^E
  # Ctrl-e e = send Ctrl-e
  bind e send-prefix
%endif

# Ctrl-e Ctrl-e = toggle window
unbind C-a
bind C-e last-window

%if '#{NO_SSH_NO_DOCKER}'
  # Alt-g: Send following keybinding to pane
  bind -n M-g command-prompt -kp key 'send %%%'
%endif

bind x confirm-before kill-pane

# reload this file
unbind r
bind r source ~/.tmux.conf \; display "Reloaded ~/.tmux.conf!"

# copy current working directory into clipboard
bind y run -b 'tmux display -p "#{pane_current_path}" | sed "s/.*/\"&\"/" | xclip -sel clip &> /dev/null'
# copy working directory of previous pane into clipboard
bind Y last-pane \; run -b 'tmux display -p "#{pane_current_path}" | sed "s/.*/\"&\"/" | xclip -sel clip &> /dev/null' \; last-pane
# copy working directory of previous pane into clipboard and paste it into current pane
bind P last-pane \; run -b 'tmux display -p "#{pane_current_path}" | sed "s/.*/\"&\"/" | xclip -sel clip &> /dev/null' \; last-pane \; send 'C-V'

# create new window
bind -n M-c new-window -c "#{pane_current_path}"

# Ctrl-PageUp/PageDown for previous/next window
# needs to be unset in terminator
bind -n C-PPage previous-window
bind -n C-NPage next-window

# Shift-Ctrl-PageUp/PageDown: move window left/right
bind -n S-C-PPage swap-window -d -t:-1
bind -n S-C-NPage swap-window -d -t:+1

# Unbind Alt-Left and Alt-Right for previous/next window
unbind -n M-Left
unbind -n M-Right
bind -n M-a select-pane -L
bind -n M-i select-pane -R

# Unbind Shift-ArrowKey for switching panes
unbind -n S-Left
unbind -n S-Right
unbind -n S-Up
unbind -n S-Down

# Alt-Up and Alt-Down for previous/next pane
# unbind -n M-Up
# unbind -n M-Down
# bind -n M-Up display-panes \; select-pane -t :.-
# bind -n M-Down display-panes \; select-pane -t :.+

unbind Space
bind Space next-layout
bind -n M-Space next-layout

unbind %
unbind |
unbind -
# split vertically (left/right) |
bind | split-window -h -c "#{pane_current_path}"
# split horizontally (top/bottom) -
bind - split-window -v -c "#{pane_current_path}"
# delete buffer (was before -)
bind % delete-buffer

# scroll only half pages with Alt-PageUp/PageDown
unbind -n M-NPage
unbind -n M-PPage
bind -n M-NPage copy-mode \; send -X halfpage-down-and-cancel
bind -n M-PPage copy-mode \; send -X halfpage-up

# activate Home and End in copy-mode
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi End  send -X end-of-line

# switch , and ; in vi mode
unbind -T copy-mode-vi ,
unbind -T copy-mode-vi \;
bind -T copy-mode-vi ,  send -X jump-again
bind -T copy-mode-vi \; send -X jump-reverse

# quit copy mode with x (besides q)
bind -T copy-mode-vi x  send -X cancel

# activate copy mode and search up
bind -n M-b copy-mode \; command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind -n M-f send '~/bin/tmux-select-filename.sh' \; send 'C-m'

# open buffer in vim (replace with something without an F-key)
bind -n M-P capture-pane -S -32768 \; save-buffer "/tmp/printscreen" \; delete-buffer \; new-window -n "PRINTSCREEN" "vim /tmp/printscreen"

# send minimal bash config
bind b send "bind 'set completion-ignore-case on' '\"\\t\": menu-complete' '\"\\e[Z\": menu-complete-backward' 'set menu-complete-display-prefix on' && alias gd='git diff' && test -f /tmp/.vimrc && alias vim='vim -u /tmp/.vimrc' && alias vimdiff='vimdiff -u /tmp/.vimrc'"
# send small bash config
bind B send "bind '\"\\e[A\": history-search-backward' '\"\\e[B\": history-search-forward' '\"\\e[1;2D\": shell-backward-word' '\"\\e[1;2C\": shell-forward-word' '\"\\C-b\": shell-backward-word' '\"\\C-f\": shell-forward-word' 'set completion-ignore-case on' '\"\\t\": menu-complete' '\"\\e[Z\": menu-complete-backward' 'set show-all-if-ambiguous on' 'set menu-complete-display-prefix on' && alias ..='cd ..' && alias ...='cd ../..' && alias ....='cd ../../..' && alias .....='cd ../../../..' && alias ll='ls -alF' && alias g='git status' && alias gp='git pull' && alias gd='git diff'; test -f /tmp/.vimrc && alias vim='vim -u /tmp/.vimrc' && alias vimdiff='vimdiff -u /tmp/.vimrc'"
# download my .vimrc (to /tmp)
bind v send "test -f /tmp/.vimrc || wget -P /tmp https://raw.githubusercontent.com/MaxGyver83/dotfiles/master/vim/.vimrc && alias vim='vim -u /tmp/.vimrc' && alias vimdiff='vimdiff -u /tmp/.vimrc'"

###########################################################
# dwm-inspired tiling pane management
# originally from: https://github.com/saysjonathan/dwm.tmux

# Create new pane in current directory
bind -n M-n split-window -c "#{pane_current_path}" \;\
        select-layout main-vertical \;\
        run "tmux resize-pane -t :.1 -x \"$(echo \"#{window_width}/2/1\" | bc)\""

# Kill pane
bind -n M-q kill-pane -t :. \;\
        select-layout main-vertical \;\
        run "tmux resize-pane -t :.1 -x \"$(echo \"#{window_width}/2/1\" | bc)\""

# Next/prev pane
bind -n M-e select-pane -t :.+
bind -n M-o select-pane -t :.-

# Resize pane
bind -n M-l resize-pane -L 2
bind -n M-h resize-pane -R 2
bind -n M-L resize-pane -U 2
bind -n M-H resize-pane -D 2

# Rotate counterclockwise/clockwise
bind -n M-x rotate-window -U \; select-pane -t 1
bind -n M-, rotate-window -D \; select-pane -t 1

# Swap selected pane with main pane
bind -n M-w swap-pane -d -s :. -t :.1 # \; select-pane -t :.1
# Swap selected pane with previously active pane
bind -n M-W swap-pane -s :. -t !
# bind -n M-t if-shell "[ $(tmux display -p '#P') = '1' ]" "swap-pane -d -s :. -t :.1" "swap-pane -s :. -t !"

# Refresh layout
bind -n M-R select-layout main-vertical \;\
        run "tmux resize-pane -t :.1 -x \"$(echo \"#{window_width}/2/1\" | bc)\""
# Set transparent background if a light st theme is active
bind -n M-T if-shell "test -f /tmp/st-light" \
  "set -g window-style bg=black \; set -g window-active-style bg=black \;\
   set -g pane-border-style bg=black,fg=colour008 \;\
   set -g pane-active-border-style bg=black,fg=colour208" \
  "set -g window-style bg=colour235 \; set -g window-active-style bg=color234 \;\
   set -g pane-border-style bg=colour235,fg=colour008 \;\
   set -g pane-active-border-style bg=colour235,fg=colour208"

# Zoom selected pane
unbind M-z
bind -n M-z resize-pane -Z
# Toggle selected pane's size (50% ‚ü∑ 70/80%)
unbind M-m
bind -n M-m if 'test "#{monocle}" -eq 1' \
    'setenv -g monocle 0 ; select-layout main-vertical ; run "tmux resize-pane -t :.1 -x \"$(echo \"#{window_width}/2/1\" | bc)\""' \
    'setenv -g monocle 1 ; resize-pane -x 70% -y 80%'

# focus last window
bind -n M-t last-window

# create new window
bind -n M-c new-window -c "#{pane_current_path}"

# copy line (without leading spaces and newline) into command line
bind -T copy-mode-vi X send -X back-to-indentation \; send -X begin-selection \; send -X end-of-line \; send -X cursor-left \; send -X copy-pipe-and-cancel "tmux paste-buffer"

# browse output lines: Activate with Alt-1, go up/down with Alt-2/3
bind -n M-1 run '~/bin/tmux-save-output.sh'
bind -n M-2 run '~/bin/tmux-increase-line-number.sh && ~/bin/tmux-paste-output-line.sh'
bind -n M-3 run '~/bin/tmux-decrease-line-number.sh && ~/bin/tmux-paste-output-line.sh'
